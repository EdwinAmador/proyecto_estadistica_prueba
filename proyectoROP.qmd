---
title: "Proyecto Estadistica 1 (Bitacora 2)"
toc: true
format:
  html:
    html-math-method: katex
    code-tools: true
    self-contained: true
execute:
  warning: false
editor: visual
---

# Paquetes usados

```{r Paquetes}
#| warning: false
#| echo: false

setwd("C:/Users/EDcra/Downloads/Nueva carpeta")
# library('ProjectTemplate')
library(janitor)
# install.packages('dplyr', repos = 'https://cloud.r-project.org')
library(dplyr)
library(lubridate)
library(readxl)
library(ggplot2)
library(cowplot)
theme_set(theme_cowplot())
library(gridExtra)
library(stats)
library(xtable)
# install.packages("ggsci")
library(ggsci)
library(viridis)
library(forecast)
library(tseries)

# install.packages('tidyr', repos = 'https://cloud.r-project.org')
library(tidyverse)
library(tidyr)
library(cli)

library(grid)
library(gridExtra)
# library(cowplot)
```

# Importar y limpiar los datos

```{r "importar y limpiar los datos", message=FALSE}
#| warning: false

rentabilidadxENTIDADES <- read.csv("C:/Users/EDcra/Downloads/Nueva carpeta/RentabilidadxENTIDADES.csv", skip = 5, dec = ",") %>% remove_empty()

colnames(rentabilidadxENTIDADES) <- c("Mes", "histBAC", "anuBAC", "histBCR", "anuBCR", "histBN", "anuBN", "histCCSS", "anuCCSS", "histIBP", "anuIBP", "histINS", "anuINS", "histPOP", "anuPOP", "histVP", "anuVP")

rentRaw <- rentabilidadxENTIDADES

rentabilidadxENTIDADES <- rentabilidadxENTIDADES %>% clean_names() %>% select(-c(hist_ibp,anu_ibp,hist_ins, anu_ins))

nombres_meses <- c(
  "ene", "feb", "mar", "abr", "may", "jun",
  "jul", "ago", "sep", "oct", "nov", "dic"
)

rentabilidadxENTIDADES <- rentabilidadxENTIDADES %>% mutate(year = as.numeric(paste0("20",substr(mes,5,6))), month = match(substr(mes,1,3), nombres_meses))

rentabilidadxENTIDADES <- rentabilidadxENTIDADES %>% 
  mutate(mes = my(paste0(month, "-", year))) %>% 
  select(-month,-year)

rentabilidadHist <- rentabilidadxENTIDADES %>% 
  select(matches("hist"))
rentabilidadHist <- cbind(rentabilidadxENTIDADES[,1], rentabilidadHist)

rentabilidadAnu <- rentabilidadxENTIDADES %>% 
  select(matches("anu"))
rentabilidadAnu <- cbind(mes = rentabilidadxENTIDADES$mes, rentabilidadAnu)
```

# Regresión Lineal

```{r}
# Hacer una columna con los números----------------------------------------------
# Asegúrate de que la columna 'fecha' esté en formato de fecha
rentabilidadAnu$mes <- as.Date(rentabilidadAnu$mes)

# Calcula los números de mes secuenciales y crea una nueva columna 'numero_mes'
rentabilidadAnu <- rentabilidadAnu %>% 
  mutate(numero_mes = as.integer(format(mes, "%Y")) * 12 + as.integer(format(mes, "%m")) - (min(as.integer(format(rentabilidadAnu$mes, "%Y")) * 12 + as.integer(format(rentabilidadAnu$mes, "%m"))) - 1))

```

```{r}
# REGRESION LINEAL BAC-----------------------------------------------------------
# Ajustar un modelo de regresión lineal
modelo <- lm(anu_bac ~ numero_mes, data = rentabilidadAnu)
# Resumen del modelo
summary(modelo)

# Crear un gráfico de dispersión y de regresión con ggplot2
ggplot(rentabilidadAnu, aes(x = numero_mes, y = anu_bac)) +
  geom_point(color = "blue", size = 3) +  # Puntos azules para los datos
  geom_smooth(method = "lm", color = "red", se = FALSE) +  # Línea de regresión
  labs(title = "Regresión Lineal BAC", x = "Número de Mes", y = "Rendimiento Bac") +  # Etiquetas del gráfico
  theme_minimal()  # Estilo del gráfico (puedes personalizarlo según tus preferencias)
```

```{r}
# REGRESION LINEAL BCR------------------------------------------------------------
# Ajustar un modelo de regresión lineal
modelo <- lm(anu_bcr ~ numero_mes, data = rentabilidadAnu)
# Resumen del modelo
summary(modelo)

# Crear un gráfico de dispersión y de regresión con ggplot2
ggplot(rentabilidadAnu, aes(x = numero_mes, y = anu_bcr)) +
  geom_point(color = "blue", size = 3) +  # Puntos azules para los datos
  geom_smooth(method = "lm", color = "red", se = FALSE) +  # Línea de regresión
  labs(title = "Regresión Lineal BCR", x = "Número de Mes", y = "Rendimiento Bac") +  # Etiquetas del gráfico
  theme_minimal()  # Estilo del gráfico (puedes personalizarlo según tus preferencias)
```

```{r}
# REGRESION LINEAL BN------------------------------------------------------------
# Ajustar un modelo de regresión lineal
modelo <- lm(anu_bn ~ numero_mes, data = rentabilidadAnu)
# Resumen del modelo
summary(modelo)

# Crear un gráfico de dispersión y de regresión con ggplot2
ggplot(rentabilidadAnu, aes(x = numero_mes, y = anu_bn)) +
  geom_point(color = "blue", size = 3) +  # Puntos azules para los datos
  geom_smooth(method = "lm", color = "red", se = FALSE) +  # Línea de regresión
  labs(title = "Regresión Lineal BN", x = "Número de Mes", y = "Rendimiento Bac") +  # Etiquetas del gráfico
  theme_minimal()  # Estilo del gráfico (puedes personalizarlo según tus preferencias)
```

```{r}
# REGRESION LINEAL CCSS------------------------------------------------------------
# Ajustar un modelo de regresión lineal
modelo <- lm(anu_ccss ~ numero_mes, data = rentabilidadAnu)
# Resumen del modelo
summary(modelo)

# Crear un gráfico de dispersión y de regresión con ggplot2
ggplot(rentabilidadAnu, aes(x = numero_mes, y = anu_ccss)) +
  geom_point(color = "blue", size = 3) +  # Puntos azules para los datos
  geom_smooth(method = "lm", color = "red", se = FALSE) +  # Línea de regresión
  labs(title = "Regresión Lineal CCSS", x = "Número de Mes", y = "Rendimiento Bac") +  # Etiquetas del gráfico
  theme_minimal()  # Estilo del gráfico (puedes personalizarlo según tus preferencias)
```

# Prueba de Hipótesis

```{r}
#Ya tenemos la tabla con los datos de los promedios mensuales
puntos_especificos <- c(139, 177)  # Puntos específicos en el eje x

grafico <- ggplot(data = rentabilidadAnu, aes(x = 1:nrow(rentabilidadAnu), y = anu_bac)) +
  geom_line() +
  geom_vline(xintercept = puntos_especificos, linetype = "dashed", color = "red") +
  labs(title = "Gráfico de Líneas con Líneas Verticales", x = "Índice de Datos", y = "Valor de Datos")

print(grafico)
```

```{r}
# Hago un proceso para añadir al dataframe una columna con los datos de cuales son meses de pandemia y cuáles no
df <- data.frame(datos_numericos = rnorm(180))
etiquetas <- rep("no_pandemia", 180)
etiquetas[133:177] <- "pandemia"
# Agrego dicha columna nueva
rentabilidadAnu$etiqueta_pandemia <- etiquetas
#Código para el t.test
t.test(anu_bac~etiqueta_pandemia,data = rentabilidadAnu)

```

```{r}
#Test de Varianza F
var.test(anu_bac~etiqueta_pandemia,data = rentabilidadAnu)
```

```{r}
#Kolmogotov-Smirnov test
ks.test(anu_bac~etiqueta_pandemia,data = rentabilidadAnu)
```

```{r}
#Test Mann-Whitley es una prueba no paramétrica que se utiliza para comparar las medianas de dos grupos independientes.
wilcox.test(anu_bac~etiqueta_pandemia,data = rentabilidadAnu)
```
